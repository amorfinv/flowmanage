#=========================================================================
#=  Main default settings
#=========================================================================

# choose the geo data info to use
graph_path = 'data/vienna/roadnetwork/finalized_graph.graphml'

# sending/receiving nodes path
receiving_nodes = 'data/vienna/traffic/Recieving_nodes.gpkg'
sending_nodes = 'data/vienna/traffic/Sending_nodes.gpkg'

# other geo data
geo_data = 'data/vienna'

# choose the output directory
airspace = 'output/airspace'
intentions = 'output/intentions'
scenarios = 'output/scenarios'

#=========================================================================
#=  Airspace settings
#=========================================================================

# general layer settings (in general min_height is not zero)
min_height = 30
max_height = 480
layer_spacing = 30

# heading layering settings for open airspace
heading_airspace =  True
min_angle = 0
max_angle = 360
angle_spacing = 45

#if making a heading based constrained airspace
heading_constrained = True
min_angle_constrained = 0
max_angle_constrained = 360
angle_spacing_constrained = 72

# a dictionary of stackings to include
stack_dict = {
    0: ['C', 'T', 'F'],
    1: ['F', 'T', 'C'],
    'open': ['C']
}

# the order that the information should be ordered in (see air.build_layer_airspace_dict())
info_layers = ['C', 'T', 'F']

# The layer to include at the end of the airspace dictionary. If empty it is ignored
extreme_layer = 'C'

# wheter to include the ground level in the airspace height = 0
ground_level_layer = True

# where to save the layer_file
airspace_filepath = 'output/airspace/layers.json'

#=========================================================================
#=  If running in qgis mode
#=========================================================================

# qgis path
qgis_path = '/usr/local/Caskroom/miniconda/base/envs/qgis/lib/qgis'

# qgis algoritms to run
qgis_algos = ['create_grid']

# create_grid settings
grid_size = 100 #m
grid_path = 'data/vienna/roadnetwork/grid.gpkg'

#=========================================================================
#=  Origin-destination point point creation default settings
#=========================================================================

# The code takes the created grid with pyqgis and filters the points
# so that the points are at least grid_size away from each other.
# See filter_center_points() for more info.

# use the center points of the roads as origin-destination points that are
# larger than edge cutoff
edge_cutoff = 60 #m

# center points filepath
center_points = 'data/vienna/roadnetwork/center_points.gpkg'

#=========================================================================
#=  Intention maker default settings
#=========================================================================

# The columns in the intention files
intention_cols = ['acid', 'actype', 'spawn_time', 'origin_lon', 'origin_lat',
                    'destination_lon', 'destination_lat', 'priority']

min_distance = 1 # km
avg_speed = 25 # knots

#=========================================================================
#=  Scenario maker default settings
#=========================================================================

# The header to place at the top of each scenario file.
scenario_header = [
    '00:00:00>HOLD\n',
    '00:00:00>PAN 48.204011819028494 16.363471515762452\n',
    '00:00:00>ZOOM 10\n',
    '00:00:00>STREETSENABLE\n'
    '00:00:00>CASMACHTHR 0\n'
]

# Columns for the creating aircraft command
scen_cols = ['crecmd', 'acid', 'actype', 'origin_lat', 'origin_lon','destination_lat', 
                    'destination_lon', 'qdr', 'alt', 'spd' , 'priority']

# defaults for missing values
default_values = {'crecmd': 'CREM2', 'actype': 'M600', 'qdr': 0, 'alt': 30, 
                    'spd': 10 , 'priority': 1}